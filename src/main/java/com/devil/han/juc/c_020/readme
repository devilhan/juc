ReentrantLock  vs synchronized

cas vs synchronized

手动释放锁
tryLock
lockInterruptibly
公平锁与非公平锁切换

countDownLatch  latch.countdown()   latch.await()
join()
CyclicBarrier  -- 栅栏 批量处理/限流 (GUAVA RateLimiter)

Phaser -- 遗传策略

ReadWriteLock
    共享锁 --- 读锁 / 排他锁 ---  写锁

StampLock

Semaphore 信号灯
    限流，允许多少个线程同时执行 类似于车站窗口

Exchanger
    线程之间交换数据，只能是两个线程之间执行

LockSupport
    淘宝面试题：
        - 实现一个容器，提供两个方法，add，size
          写两个线程，线程1添加10个元素到容器中，线程2实现监控元素的个数，
          当个数到5个时，线程2给出提示并结束
        - 写一个固定容量同步容器，拥有put和get方法，以及getCount 方法，
            能狗支持2个生产者线程以及10个消费者线程的阻塞调用

sychronized
    无锁 -- 偏向锁  --  自旋锁  -- 重量级锁

volatile
    线程可见
        实现: 缓存一致性协议

    禁止指令重排序
        实现: 添加内存屏障

Condition
    不同的等待队列
